@page
@model ABCHardware_Project.Pages.ProcessSaleModel
@{
    ViewData["Title"] = "Process Sale";
}

@section ProcessSalescriptContent
    {     
   

    <script src="~/libraries/jquery/jquery.js"></script>
    <script src="~/libraries/jquery-validate/jquery.validate.js"></script>
    <script src="~/libraries/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script>
       
    </script>
    <script>
        window.addEventListener('beforeunload', function () {
            // Clear the localStorage
            localStorage.clear();
        });
        document.addEventListener("DOMContentLoaded", function () {
            loadCartItems();
        });

        function addToCart(button) {
            let tableRow = button.closest("tr");
            let customerSelect = document.querySelector(".customerSelect");
            let customerID = customerSelect.value;
            let itemCode = tableRow.querySelector(".itemCode").value;
            let description = tableRow.querySelector(".description").value;
            let unitPrice = tableRow.querySelector(".unitPrice").value;
            let quantity = tableRow.querySelector(".quantity").value;


            //Test
            let pattern = /^[A-Za-z\s]+$/;
            let salePerson = document.querySelector("._SalePerson").value;
            let numberPattern = /^[0-9]+$/;

            if (salePerson === "") {
                alert('Please insert Sale Person Name');
                return false;
            } else if (!pattern.test(salePerson)) {
                alert('Please use only alphabets and spaces. Valid examples: "Mike Cho" or "mike cho"');
                return false;
            } else if (customerID === "") { 
                alert('Please Select Customer ID');
                return false;
            } else if (quantity === "" || quantity == 0) { 
                alert('Quantity must not be empty or 0. Please insert a valid quantity.');
                return false;
            } else if (!numberPattern.test(quantity)) { 
                alert('Quantity must be a Number.');
                return false;
            }

            var cartItem = {
                customerID: customerID,
                itemCode: itemCode,
                description: description,
                unitPrice: unitPrice,
                quantity: quantity,


                salePerson: salePerson
            };

            var existingCartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
            existingCartItems.push(cartItem);
            localStorage.setItem("cartItems", JSON.stringify(existingCartItems));

            let sampleForm = document.getElementById("sampleForms");
            sampleForm.style.display = "block";
            // Refresh the cart table
            loadCartItems();

            // Add to SampleTable
            //addToSampleTable(cartItem);

            return true;
        }

        function addToSampleTable(cartItem) {
            var sampleTable = document.getElementById("SampleTable");
            var newRow = sampleTable.insertRow(-1);



            newRow.insertCell(0).innerHTML = '<input name="ABCSale[' + newRow.rowIndex + '].CustomerID" value="' + cartItem.customerID + '" readonly class="YourClass">';
            newRow.insertCell(1).innerHTML = '<input name="ABCSale[' + newRow.rowIndex + '].SaleItem.ItemCode" value="' + cartItem.itemCode + '" readonly class="YourClass">';
            newRow.insertCell(2).innerHTML = '<input name="ABCSale[' + newRow.rowIndex + '].SaleItem.Description" value="' + cartItem.description + '" readonly class="YourClass">';
            newRow.insertCell(3).innerHTML = '<input name="ABCSale[' + newRow.rowIndex + '].SaleItem.UnitPrice" value="' + cartItem.unitPrice + '" readonly class="YourClass">';
            newRow.insertCell(4).innerHTML = '<input name="ABCSale[' + newRow.rowIndex + '].SaleItem.Quantity" value="' + cartItem.quantity + '" readonly class="YourClass">';

            //
            newRow.insertCell(5).innerHTML = '<input name="ABCSale[' + newRow.rowIndex + '].SalePerson" value="' + cartItem.salePerson + '" readonly class="YourClass">';
        }

        function loadCartItems() {
            var cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
           // var cartTable = document.getElementById("cartTable");
            var totalUnitPriceDiv = document.getElementById("totalUnitPrice");
            var totalGSTDiv = document.getElementById("totalGST");
            var grandTotalDiv = document.getElementById("grandTotalDiv");

           // while (cartTable.rows.length > 1) {
           //     cartTable.deleteRow(1);
           // }

            let totalUnitPrice = 0;
            let totalGST = 0;

            for (var i = 0; i < cartItems.length; i++) {
               // var newRow = cartTable.insertRow(-1);

                // Calculate total unit price for each item
                var itemTotalUnitPrice = cartItems[i].unitPrice * cartItems[i].quantity;
                totalUnitPrice += itemTotalUnitPrice;

                // Calculate GST for each item (assuming GST is 10%)
                var itemGST = 0.05 * itemTotalUnitPrice;
                totalGST += itemGST;

               // newRow.insertCell(0).innerHTML = cartItems[i].customerID;
                //newRow.insertCell(1).innerHTML = cartItems[i].itemCode;
                //newRow.insertCell(2).innerHTML = cartItems[i].description;
                //newRow.insertCell(3).innerHTML = cartItems[i].unitPrice;
                //newRow.insertCell(4).innerHTML = cartItems[i].quantity;
            }

            // Update the content of separate div elements
            totalUnitPriceDiv.innerHTML = '<b>Total Unit Price:</b> $ ' + totalUnitPrice;
            totalGSTDiv.innerHTML = '<b>Total GST(5%):</b> $ ' + totalGST;
            grandTotalDiv.innerHTML = '<b>Grand Total:</b> $ ' + (totalUnitPrice + totalGST);

            // Update SampleTable
            updateSampleTable();
        }

        function updateSampleTable() {
            var sampleTable = document.getElementById("SampleTable");
            sampleTable.innerHTML = "";  // Clear the existing content

            // Get cart items from localStorage
            var cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

            // Add each item to SampleTable
            for (var i = 0; i < cartItems.length; i++) {
                addToSampleTable(cartItems[i]);
            }
        }

        // Add this function to populate hidden fields before form submission
        function prepareFormForSubmission() {
            var existingCartItems = JSON.parse(localStorage.getItem("cartItems")) || [];
            var form = document.forms["sample"];

            for (var i = 0; i < existingCartItems.length; i++) {
            //    addHiddenField(form, "_CartItems[" + i + "].CustomerID", existingCartItems[i].customerID);
                addHiddenField(form, "_CartItems[" + i + "].ItemCode", existingCartItems[i].itemCode);
                addHiddenField(form, "_CartItems[" + i + "].Description", existingCartItems[i].description);
                addHiddenField(form, "_CartItems[" + i + "].UnitPrice", existingCartItems[i].unitPrice);
                addHiddenField(form, "_CartItems[" + i + "].Quantity", existingCartItems[i].quantity);
               
            }
        }

        function addHiddenField(form, name, value) {
            var hiddenField = document.createElement("input");
            hiddenField.type = "hidden";
            hiddenField.name = name;
            hiddenField.value = value;
            form.appendChild(hiddenField);
        }


 
    </script>
}

@section ProcessSalesContent
    {
    @if (Model.everyItems != null)
    {
        <div class="messages">
            <h1 style="text-align:center"> Process Sale </h1>
            <br />

            <div class="messages">
                <label for="_salePerson">Sale Person Name: </label>
                <input type="text" class="_SalePerson" id="_salePerson" placeholder ="Please Insert SalePerson Full Name" style="width:300px; height:30px;"/>
                <br />
                <label for="SelectValue">Select Existing Customer ID: </label>
                <select class="customerSelect" name="SelectValue" style="width: 100%; height: 30px;">
                    <option value="" class="selectionProgramCode">Select Student ID</option>
                    @foreach (var id in Model.CustomerInfo)
                    {
                        <option value="@id.CustomerID" class="selectionProgramCode">@id.CustomerID @id.FirstName @id.LastName</option>
                    }
                </select>

                <span class="modelMessage"></span>
            </div>
            <br />

            <table id="itemTable" border="1">
                <tr>
                    <th>Item Code</th>
                    <th>Description</th>
                    <th>Unit Price</th>
                    <th>Quantity</th>
                    <th>Purchase</th>
                </tr>

                @foreach (var val in Model.everyItems)
                {
                    <tr>
                        <td><input name="_ItemCode" class="itemCode" value="@val.ItemCode" readonly /></td>
                        <td><input class="description" name="_Description" value="@val.Description" readonly /></td>
                        <td><input class="unitPrice" name="_UnitPrice" value="@val.UnitPrice" readonly /></td>
                        <td><input name="_Quantity" class="quantity" value="0" max="@val.Quantity" /></td>
                        <td>
                            <button type="button" onclick="addToCart(this)" class="buttons">Add</button>
                        </td>
                    </tr>
                }
            </table>

            <br />
            <br />
            <br />
            <br />
            <div class="messages">

         
              
                <form name="sample" method="post" id="sampleForms" style="display:none">

                    <h1 style="text-align:center">Process Sale Items</h1>
                    <table id="cartTable" >
                        <tr>
                            <th><label class="InputColor">Customer ID</label></th>
                            <th><label class="InputColor">Item Code</label></th>
                            <th><label class="InputColor">Description</label></th>
                            <th><label class="InputColor">Unit Price</label></th>
                            <th><label class="InputColor">Quantity</label></th>
                            <th><label class="InputColor">SalePerson</label></th>
                        </tr>
                        <!-- Add more rows and data as needed -->
                    </table>

                    <table id="SampleTable">
                        @foreach (var item in Model.ABCSale)
                        {
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                               @* <td>@item.</td>*@
                            </tr>
                        }
                    </table>

                    <br />
                    <div id="totalUnitPrice"></div>
                    <div id="totalGST"></div>
                    <div id="grandTotalDiv"></div>
                    <br />

                    <input type="submit" value="Process Sale" class="buttons" />

                </form>
                <section class="messages">


                    <h3 class="modelMessage">@Model.Message</h3>
                </section>

             
            </div>
        </div>
    }
}
